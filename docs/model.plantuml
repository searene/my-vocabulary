@startuml My Vocabulary

package domain {
    package card {
        class CardInstance {
            - id: number
            + {static} getNextDueCardInstance(bookId): Optional<CardInstance>
            + {static} getTotalDueCardInstanceCount(bookId): number
        }
        CardInstance "*" *-- "1" Card
        CardInstance "*" *-- "1" Composition
        class CardType {
            - id: number
            - name: string
        }
        class FieldType {
            - id: number
            - name: string
        }
        CardType "1" o-- "*" FieldType
        class Composition {
            - id: number
            - frontFieldList: Field[]
            - backFieldList: Field[]
        }
        Composition o-- Field
        CardType "1" o-- "*" Composition
        class Card {
            - id: number
            - bookId: number
            + {static} createEmptyCard(bookId): Card
            + save(): Card
        }
        Card "*" *-- "1" CardType
        class Field {
            - id: number
            - contents: string
            + update()
        }
        Card "1" o-- "*" Field
        Field "*" o-- "1" FieldType
        class Review {
            - id: number
            - reviewTime: DateTime
            + save()
        }
        CardInstance "1" --o "*" Review
        enum Level {
            EASY
            GOOD
            HARD
            FORGOTTEN
        }
        Review "1" *-- "1" Level
    }
    package schedule {
        interface Scheduler {
            + getNextReview(CardInstance): Map<Level, Review>
        }
        class DefaultScheduler implements Scheduler {
        }
    }
}

package Infrastructure {
  package dao {
      interface BaseDAO<D, Q> {
          + save(D)
          + update(D)
          + query(Q)
          + delete(Q)
      }
      interface CardDAO extends BaseDAO
      interface FieldDAO extends BaseDAO
      interface ReviewDAO extends BaseDAO
      interface CardTypeDAO extends BaseDAO
      interface FieldTypeDAO extends BaseDAO
      interface CompositionDAO extends BaseDAO
      interface ConfigDAO extends BaseDAO
      interface CardInstanceDAO extends BaseDAO

      class SqliteCardDAO implements CardDAO
      class SqliteFieldDAO implements FieldDAO
      class SqliteReviewDAO implements ReviewDAO
      class SqliteCardTypeDAO implements CardTypeDAO
      class SqliteFieldTypeDAO implements FieldTypeDAO
      class SqliteCompositionDAO implements CompositionDAO
      class SqliteConfigDAO implements ConfigDAO
      class SqliteCardInstanceDAO implements CardInstanceDAO
  }
  package do {
      class BaseDO {
          - id: number
          - createTime: Date
      }
      class CardInstanceDO extends BaseDO {
          - cardId: number
          - compositionId: number
      }
      class CardDO extends BaseDO {
          - bookId: number
          - cardTypeId: number
      }
      class FieldDO extends BaseDO {
          - cardId: number
          - contents: string
      }
      class ReviewDO extends BaseDO {
          - cardInstanceId: number
          - reviewTime: string
          - level: Level
          - isDone: Boolean
      }
      class CardTypeDO extends BaseDO {
          - name: string
      }
      class FieldTypeDO extends BaseDO {
          - cardTypeId: number
          - name: string
      }
      class CompositionDO extends BaseDO {
          - frontFieldIdList: string
          - backFieldIdList: string
      }
      class ConfigDO {
          - defaultCardTypeId: number
      }
  }
}
@enduml