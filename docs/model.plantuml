@startuml My Vocabulary

package domain {
    package card {
        class CardType {
            - id: number
        }
        class FieldType {
            - id: number
            - name: String
        }
        CardType "1" o-- "*" FieldType
        class Card {
            - id: number
            - bookId: number
            + {static} createEmptyCardUsingDefaultCardType(number bookId): Card
            + save(): Card
            + addReview(Review): Review
        }
        note right of Card::createEmptyCardUsingDefaultCardType
        Card.id and Field.id is null because we don't save
        the newly created instance to database.
        end note
        note left of Card::save
        Save the Card to database
        and generate Card.id and Field.id
        end note
        Card "*" *-- "1" CardType
        class Field {
            - id: number
            - contents: String
            + update()
        }
        Card "1" o-- "*" Field
        Field "1" o-- "1" FieldType
        class Review {
            - id: number
            - reviewTime: DateTime
        }
        Card "1" o-- "*" Review
        enum Level {
            EASY
            GOOD
            HARD
            FORGOTTEN
        }
        Review "1" *-- "1" Level
    }
    package schedule {
        interface Scheduler {
            + getScheduledReview(Card): Map<Level, Review>
        }
        class DefaultScheduler implements Scheduler {
        }
    }
}

package Infrastructure {
  package dao {
      interface BaseDAO<D, Q> {
          + save(D)
          + update(D)
          + query(Q)
          + delete(Q)
      }
      interface CardDAO extends BaseDAO {
      }
      interface FieldDAO extends BaseDAO {
      }
      interface ReviewDAO extends BaseDAO {
      }
      interface CardTypeDAO extends BaseDAO {
      }
      interface FieldTypeDAO extends BaseDAO {
      }
      interface ConfigDAO extends BaseDAO {
      }
      class SqliteCardDAO implements CardDAO
      class SqliteFieldDAO implements FieldDAO
      class SqliteReviewDAO implements ReviewDAO
      class SqliteCardTypeDAO implements CardTypeDAO
      class SqliteFieldTypeDAO implements FieldTypeDAO
      class SqliteConfigDAO implements ConfigDAO
  }
  package do {
      class BaseDO {
          - id: number
          - createTime: Date
      }
      class CardDO extends BaseDO {
          - bookId: number
          - cardTypeId: number
      }
      class FieldDO extends BaseDO {
          - cardId: number
          - contents: String
      }
      class ReviewDO extends BaseDO {
          - cardId: number
          - reviewTime: String
          - level: Level
          - isDone: Boolean
      }
      class CardTypeDO extends BaseDO {
      }
      class FieldTypeDO extends BaseDO {
          - cardTypeId: number
          - name: String
      }
      class ConfigDO {
          - defaultCardTypeId: number
      }
  }
}
@enduml